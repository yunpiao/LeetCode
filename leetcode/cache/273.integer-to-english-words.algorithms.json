{"id":273,"fid":"273","name":"整数转换英文表示","slug":"integer-to-english-words","link":"https://leetcode.cn/problems/integer-to-english-words/description/","percent":36.73208747100373,"level":"Hard","category":"algorithms","en_name":"Integer to English Words","cn_name":"整数转换英文表示","totalAC":"42.8K","totalSubmit":"116.3K","likes":345,"dislikes":0,"desc":"<p>将非负整数 <code>num</code> 转换为其对应的英文表示。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 123\n<strong>输出：</strong>\"One Hundred Twenty Three\"\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 12345\n<strong>输出：</strong>\"Twelve Thousand Three Hundred Forty Five\"\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre>\n<strong>输入：</strong>num = 1234567\n<strong>输出：</strong>\"One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven\"\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= num &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    string numberToWords(int num) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public String numberToWords(int num) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numberToWords(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: str\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numberToWords(self, num: int) -> str:\n        "},{"value":"c","text":"C","defaultCode":"char* numberToWords(int num) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public string NumberToWords(int num) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} num\n * @return {string}\n */\nvar numberToWords = function(num) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function numberToWords(num: number): string {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $num\n     * @return String\n     */\n    function numberToWords($num) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numberToWords(_ num: Int) -> String {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numberToWords(num: Int): String {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  String numberToWords(int num) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func numberToWords(num int) string {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} num\n# @return {String}\ndef number_to_words(num)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numberToWords(num: Int): String = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn number_to_words(num: i32) -> String {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (number-to-words num)\n  (-> exact-integer? string?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec number_to_words(Num :: integer()) -> unicode:unicode_binary().\nnumber_to_words(Num) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec number_to_words(num :: integer) :: String.t\n  def number_to_words(num) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func numberToWords(num: Int64): String {\n\n    }\n}"}],"testcase":"123","testable":true,"templateMeta":{"name":"numberToWords","params":[{"name":"num","type":"integer"}],"return":{"type":"string"}}}