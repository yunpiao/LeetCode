{"id":459,"fid":"459","name":"重复的子字符串","slug":"repeated-substring-pattern","link":"https://leetcode.cn/problems/repeated-substring-pattern/description/","percent":52.04514939187195,"level":"Easy","category":"algorithms","en_name":"Repeated Substring Pattern","cn_name":"重复的子字符串","totalAC":"324.4K","totalSubmit":"621.3K","likes":1280,"dislikes":0,"desc":"<p>给定一个非空的字符串<meta charset=\"UTF-8\" />&nbsp;<code>s</code>&nbsp;，检查是否可以通过由它的一个子串重复多次构成。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"abab\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"ab\" 重复两次构成。\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"aba\"\n<strong>输出:</strong> false\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"abcabcabcabc\"\n<strong>输出:</strong> true\n<strong>解释:</strong> 可由子串 \"abc\" 重复四次构成。 (或子串 \"abcabc\" 重复两次构成。)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>提示：</b></p>\n\n<p><meta charset=\"UTF-8\" /></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10<sup>4</sup></code></li>\n\t<li><code>s</code>&nbsp;由小写英文字母组成</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool repeatedSubstringPattern(string s) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean repeatedSubstringPattern(String s) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def repeatedSubstringPattern(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def repeatedSubstringPattern(self, s: str) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool repeatedSubstringPattern(char* s) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool RepeatedSubstringPattern(string s) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {boolean}\n */\nvar repeatedSubstringPattern = function(s) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function repeatedSubstringPattern(s: string): boolean {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @return Boolean\n     */\n    function repeatedSubstringPattern($s) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func repeatedSubstringPattern(_ s: String) -> Bool {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun repeatedSubstringPattern(s: String): Boolean {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool repeatedSubstringPattern(String s) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func repeatedSubstringPattern(s string) bool {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {Boolean}\ndef repeated_substring_pattern(s)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def repeatedSubstringPattern(s: String): Boolean = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn repeated_substring_pattern(s: String) -> bool {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (repeated-substring-pattern s)\n  (-> string? boolean?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec repeated_substring_pattern(S :: unicode:unicode_binary()) -> boolean().\nrepeated_substring_pattern(S) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec repeated_substring_pattern(s :: String.t) :: boolean\n  def repeated_substring_pattern(s) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func repeatedSubstringPattern(s: String): Bool {\n\n    }\n}"}],"testcase":"\"abab\"","testable":true,"templateMeta":{"name":"repeatedSubstringPattern","params":[{"name":"s","type":"string"}],"return":{"type":"boolean"}}}