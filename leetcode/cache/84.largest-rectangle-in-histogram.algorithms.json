{"id":84,"fid":"84","name":"柱状图中最大的矩形","slug":"largest-rectangle-in-histogram","link":"https://leetcode.cn/problems/largest-rectangle-in-histogram/description/","percent":46.71035467981251,"level":"Hard","category":"algorithms","en_name":"Largest Rectangle in Histogram","cn_name":"柱状图中最大的矩形","totalAC":"517.8K","totalSubmit":"1.1M","likes":2915,"dislikes":0,"desc":"<p>给定 <em>n</em> 个非负整数，用来表示柱状图中各个柱子的高度。每个柱子彼此相邻，且宽度为 1 。</p>\n\n<p>求在该柱状图中，能够勾勒出来的矩形的最大面积。</p>\n\n<p> </p>\n\n<p><strong>示例 1:</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram.jpg\" /></p>\n\n<pre>\n<strong>输入：</strong>heights = [2,1,5,6,2,3]\n<strong>输出：</strong>10\n<strong>解释：</strong>最大的矩形为图中红色区域，面积为 10\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<p><img src=\"https://assets.leetcode.com/uploads/2021/01/04/histogram-1.jpg\" /></p>\n\n<pre>\n<strong>输入：</strong> heights = [2,4]\n<b>输出：</b> 4</pre>\n\n<p> </p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 <= heights.length <=10<sup>5</sup></code></li>\n\t<li><code>0 <= heights[i] <= 10<sup>4</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int largestRectangleArea(int[] heights) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def largestRectangleArea(self, heights):\n        \"\"\"\n        :type heights: List[int]\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def largestRectangleArea(self, heights: List[int]) -> int:\n        "},{"value":"c","text":"C","defaultCode":"int largestRectangleArea(int* heights, int heightsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int LargestRectangleArea(int[] heights) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} heights\n * @return {number}\n */\nvar largestRectangleArea = function(heights) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function largestRectangleArea(heights: number[]): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $heights\n     * @return Integer\n     */\n    function largestRectangleArea($heights) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func largestRectangleArea(_ heights: [Int]) -> Int {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun largestRectangleArea(heights: IntArray): Int {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int largestRectangleArea(List<int> heights) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func largestRectangleArea(heights []int) int {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} heights\n# @return {Integer}\ndef largest_rectangle_area(heights)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def largestRectangleArea(heights: Array[Int]): Int = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn largest_rectangle_area(heights: Vec<i32>) -> i32 {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (largest-rectangle-area heights)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec largest_rectangle_area(Heights :: [integer()]) -> integer().\nlargest_rectangle_area(Heights) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec largest_rectangle_area(heights :: [integer]) :: integer\n  def largest_rectangle_area(heights) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func largestRectangleArea(heights: Array<Int64>): Int64 {\n\n    }\n}"}],"testcase":"[2,1,5,6,2,3]","testable":true,"templateMeta":{"name":"largestRectangleArea","params":[{"name":"heights","type":"integer[]"}],"return":{"type":"integer"}}}