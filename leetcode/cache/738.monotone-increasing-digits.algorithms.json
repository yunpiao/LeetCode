{"id":738,"fid":"738","name":"单调递增的数字","slug":"monotone-increasing-digits","link":"https://leetcode.cn/problems/monotone-increasing-digits/description/","percent":51.320771510051806,"level":"Medium","category":"algorithms","en_name":"Monotone Increasing Digits","cn_name":"单调递增的数字","totalAC":"145.1K","totalSubmit":"282K","likes":511,"dislikes":0,"desc":"<p>当且仅当每个相邻位数上的数字&nbsp;<code>x</code>&nbsp;和&nbsp;<code>y</code>&nbsp;满足&nbsp;<code>x &lt;= y</code>&nbsp;时，我们称这个整数是<strong>单调递增</strong>的。</p>\n\n<p>给定一个整数 <code>n</code> ，返回 <em>小于或等于 <code>n</code> 的最大数字，且数字呈 <strong>单调递增</strong></em> 。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1:</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 10\n<strong>输出:</strong> 9\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 1234\n<strong>输出:</strong> 1234\n</pre>\n\n<p><strong>示例 3:</strong></p>\n\n<pre>\n<strong>输入:</strong> n = 332\n<strong>输出:</strong> 299\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 10<sup>9</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int monotoneIncreasingDigits(int n) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int monotoneIncreasingDigits(int n) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def monotoneIncreasingDigits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def monotoneIncreasingDigits(self, n: int) -> int:\n        "},{"value":"c","text":"C","defaultCode":"int monotoneIncreasingDigits(int n) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MonotoneIncreasingDigits(int n) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {number}\n */\nvar monotoneIncreasingDigits = function(n) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function monotoneIncreasingDigits(n: number): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function monotoneIncreasingDigits($n) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func monotoneIncreasingDigits(_ n: Int) -> Int {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun monotoneIncreasingDigits(n: Int): Int {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int monotoneIncreasingDigits(int n) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func monotoneIncreasingDigits(n int) int {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Integer}\ndef monotone_increasing_digits(n)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def monotoneIncreasingDigits(n: Int): Int = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn monotone_increasing_digits(n: i32) -> i32 {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (monotone-increasing-digits n)\n  (-> exact-integer? exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec monotone_increasing_digits(N :: integer()) -> integer().\nmonotone_increasing_digits(N) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec monotone_increasing_digits(n :: integer) :: integer\n  def monotone_increasing_digits(n) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func monotoneIncreasingDigits(n: Int64): Int64 {\n\n    }\n}"}],"testcase":"10","testable":true,"templateMeta":{"name":"monotoneIncreasingDigits","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}