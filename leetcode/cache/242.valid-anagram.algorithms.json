{"id":242,"fid":"242","name":"有效的字母异位词","slug":"valid-anagram","link":"https://leetcode.cn/problems/valid-anagram/description/","percent":67.17218820641027,"level":"Easy","category":"algorithms","en_name":"Valid Anagram","cn_name":"有效的字母异位词","totalAC":"939K","totalSubmit":"1.4M","likes":1003,"dislikes":0,"desc":"<p>给定两个字符串 <code>s</code> 和 <code>t</code> ，编写一个函数来判断 <code>t</code> 是否是 <code>s</code> 的 <span data-keyword=\"anagram\">字母异位词</span>。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例&nbsp;1:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"anagram\", t = \"nagaram\"\n<strong>输出:</strong> true\n</pre>\n\n<p><strong>示例 2:</strong></p>\n\n<pre>\n<strong>输入:</strong> s = \"rat\", t = \"car\"\n<strong>输出: </strong>false</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length, t.length &lt;= 5 * 10<sup>4</sup></code></li>\n\t<li><code>s</code> 和 <code>t</code>&nbsp;仅包含小写字母</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>进阶:&nbsp;</strong>如果输入字符串包含 unicode 字符怎么办？你能否调整你的解法来应对这种情况？</p>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool isAnagram(string s, string t) {\n        \n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean isAnagram(String s, String t) {\n        \n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def isAnagram(self, s, t):\n        \"\"\"\n        :type s: str\n        :type t: str\n        :rtype: bool\n        \"\"\"\n        "},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def isAnagram(self, s: str, t: str) -> bool:\n        "},{"value":"c","text":"C","defaultCode":"bool isAnagram(char* s, char* t) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool IsAnagram(string s, string t) {\n        \n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @param {string} t\n * @return {boolean}\n */\nvar isAnagram = function(s, t) {\n    \n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function isAnagram(s: string, t: string): boolean {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @param String $t\n     * @return Boolean\n     */\n    function isAnagram($s, $t) {\n        \n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func isAnagram(_ s: String, _ t: String) -> Bool {\n        \n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun isAnagram(s: String, t: String): Boolean {\n        \n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool isAnagram(String s, String t) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func isAnagram(s string, t string) bool {\n    \n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @param {String} t\n# @return {Boolean}\ndef is_anagram(s, t)\n    \nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def isAnagram(s: String, t: String): Boolean = {\n        \n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn is_anagram(s: String, t: String) -> bool {\n        \n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (is-anagram s t)\n  (-> string? string? boolean?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec is_anagram(S :: unicode:unicode_binary(), T :: unicode:unicode_binary()) -> boolean().\nis_anagram(S, T) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec is_anagram(s :: String.t, t :: String.t) :: boolean\n  def is_anagram(s, t) do\n    \n  end\nend"},{"value":"cangjie","text":"Cangjie","defaultCode":"class Solution {\n    func isAnagram(s: String, t: String): Bool {\n\n    }\n}"}],"testcase":"\"anagram\"\n\"nagaram\"","testable":true,"templateMeta":{"name":"isAnagram","params":[{"name":"s","type":"string"},{"name":"t","type":"string"}],"return":{"type":"boolean"}}}